---------------main---------------one_student_eligibility ////drop procedure
DELIMITER //
CREATE PROCEDURE one_student_attendence(IN In_stu_id CHAR(8), IN In_co_id CHAR(8))
BEGIN   
    DECLARE course_status CHAR(2);
    SELECT Status INTO course_status FROM course WHERE Co_id = In_co_id LIMIT 1;
    IF course_status = 'm' THEN CALL case1(In_stu_id, In_co_id);
    ELSEIF course_status = 't' THEN CALL case2(In_stu_id, In_co_id);
    ELSEIF course_status = 'p' THEN CALL case3(In_stu_id, In_co_id);
    END IF;
END //

CALL one_student_attendence('TG1306', 'ICT1233');

---------------sub1---------------
DELIMITER //
CREATE PROCEDURE case1(IN In_stu_id CHAR(8), IN In_co_id CHAR(8))
BEGIN
    SELECT ((SELECT (sum(Pre_lec))*100 FROM attendence  WHERE Att_co_id = In_co_id AND Att_stu_id = In_stu_id)/
    (SELECT (The_week + Pra_week)*(SELECT MAX(Week) FROM attendence) FROM course WHERE Co_id = In_co_id)) AS Practicum_and_Theory,
    ((SELECT (sum(Pre_lec))*100 FROM attendence  WHERE Att_co_id = In_co_id AND Att_stu_id = In_stu_id AND Co_type = 't')/
    (SELECT (The_week)*(SELECT MAX(Week) FROM attendence) FROM course WHERE Co_id = In_co_id)) AS Theory,
    ((SELECT (sum(Pre_lec))*100 FROM attendence  WHERE Att_co_id = In_co_id AND Att_stu_id = In_stu_id AND Co_type = 'p')/
    (SELECT (Pra_week)*(SELECT MAX(Week) FROM attendence) FROM course WHERE Co_id = In_co_id)) AS Practicum;
END //

---------------sub2---------------
DELIMITER //
CREATE PROCEDURE case2(IN In_stu_id CHAR(8), IN In_co_id CHAR(8))
BEGIN 
    SELECT((SELECT SUM(Pre_lec)*100 FROM attendence WHERE Att_stu_id = In_stu_id AND Co_type = 't' AND Att_co_id = In_co_id)/
    (SELECT (The_week)*(SELECT MAX(Week) FROM attendence) FROM course WHERE Co_id = In_co_id)) AS Theory_attendance;
END //

---------------sub3---------------
DELIMITER //
CREATE PROCEDURE case3(IN In_stu_id CHAR(8), IN In_co_id CHAR(8))
BEGIN 
    SELECT((SELECT SUM(Pre_lec)*100 FROM attendence WHERE Att_stu_id = In_stu_id AND Co_type = 'p' AND Att_co_id = In_co_id)/
    (SELECT (Pra_week)*(SELECT MAX(Week) FROM attendence) FROM course WHERE Co_id = In_co_id)) AS Practicum_attendance;
END //
-------------------end-------------------


----------all student----------------all_student_eligibility
delimiter //

CREATE PROCEDURE all_student_attendence()
BEGIN
    DROP VIEW all_student_eligible;
    CREATE VIEW all_student_eligible AS
        SELECT 
            a.Att_stu_id AS Student_ID,
            a.Att_co_id As Course_ID,
            c.Co_name AS Course_name,
            IF(a.Co_type = 't', 'Theory', 'Practicum') AS Course_type,
            IF(a.Co_type = 't', (SUM(a.Pre_lec))*100/(c.The_week * MAX(a.Week)), (SUM(a.Pre_lec))*100/(c.Pra_week * MAX(a.Week))) AS Eligibility
        FROM 
            attendence a
        JOIN
            course c ON a.Att_co_id = c.Co_id
        GROUP BY 
            a.Co_type, a.Att_co_id, Att_stu_id						
        ORDER BY
        a.Att_stu_id, a.Att_co_id;
    SELECT * FROM All_student_eligible;
END //

CALL all_student_attendence();


----------all student and all course----------------
delimiter //

CREATE PROCEDURE all_student_course_atte()
BEGIN
    DROP VIEW all_student_course;
    CREATE VIEW all_student_course AS
        SELECT 
            a.Att_stu_id AS Student_ID, 
            a.Att_co_id AS Course_ID,
            c.Co_name AS Course_name,
            SUM(a.Pre_lec) * 100 / ((c.The_week + Pra_week) * MAX(a.Week)) AS Attendance
        FROM attendence a
        JOIN course c ON c.Co_id = a.Att_co_id
        GROUP BY a.Att_stu_id, a.Att_co_id
        ORDER BY a.Att_stu_id;
    SELECT * FROM all_student_course;
END //

CALL all_student_course_atte();


----------update medical----------------
delimiter //

CREATE PROCEDURE medical_update(IN in_medi_id CHAR(8), IN in_student_id CHAR(8), IN in_course_id CHAR(8), IN in_course_type CHAR(2), IN in_date DATE)
BEGIN 
    UPDATE attendence
    SET Pre_lec = Pre_lec + 1 ,Att_medi_id = in_medi_id
    WHERE Att_stu_id = in_student_id AND  Att_co_id = in_course_id AND Co_type = in_course_type AND  Pre_date = in_date;
END //

CALL medical_update('ME001', 'TG1306', 'ENG1212', 't', '2024-08-23');


-----------show medical------------

delimiter //

CREATE PROCEDURE show_medical()
BEGIN
    SELECT * FROM attendence 
    WHERE Att_medi_id IS NOT NULL;
END //

CALL show_medical();


///////////////////////view///////////////////////

-----------up 80 attendence--------------

CREATE VIEW att_eligible_up AS
    SELECT * FROM all_student_eligible
    WHERE Eligibility >= 80;


-----------down 80 attendence--------------

CREATE VIEW att_eligible_down AS
    SELECT * FROM all_student_eligible
    WHERE Eligibility <= 80;